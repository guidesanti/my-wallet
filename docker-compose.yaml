version: '3'

services:
#  mongo:
#    image: mongo
#    hostname: mongo
#    container_name: mongo
#    privileged: true
#    environment:
#      MONGO_INITDB_DATABASE: admin
#      MONGO_INITDB_ROOT_USERNAME: admin
#      MONGO_INITDB_ROOT_PASSWORD: admin
#    volumes:
#      - ./volumes/mongo:/data/db
#    ports:
#      - '27017:27017'
#    networks:
#      - local-net

  mongo1:
    image: mongo:custom
    container_name: mongo1
    hostname: mongo1
    privileged: true
    ports:
      - '27017:27017'
    volumes:
      - ./volumes/mongo1/data:/data/mongo/data
    networks:
      - local-net

  mongo2:
    image: mongo:custom
    container_name: mongo2
    hostname: mongo2
    privileged: true
    ports:
      - '27018:27017'
    volumes:
      - ./volumes/mongo2/data:/data/mongo/data
    networks:
      - local-net

  mongo3:
    image: mongo:custom
    container_name: mongo3
    hostname: mongo3
    privileged: true
    ports:
      - '27019:27017'
    volumes:
      - ./volumes/mongo3/data:/data/mongo/data
    networks:
      - local-net

  zookeeper:
    image: zookeeper
#    restart: always
    hostname: zookeeper
    container_name: zookeeper
    ports:
      - 2181:2181
    environment:
      ZOO_MY_ID: 1
      ZOO_STANDALONE_ENABLED: "true"
      ZOO_ADMINSERVER_ENABLED: "true"
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    security_opt:
      - seccomp:unconfined
    networks:
      - local-net

  kafka1:
    image: confluentinc/cp-kafka
    container_name: kafka1
    hostname: kafka1
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
      - "19092:19092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka1:9092,EXTERNAL://localhost:19092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
      KAFKA_SOCKET_REQUEST_MAX_BYTES: 369295616
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "false"
    networks:
      - local-net

  kafka2:
    image: confluentinc/cp-kafka
    container_name: kafka2
    hostname: kafka2
    depends_on:
      - zookeeper
    ports:
      - "9093:9093"
      - "19093:19093"
    environment:
      KAFKA_BROKER_ID: 2
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka2:9093,EXTERNAL://localhost:19093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
      KAFKA_SOCKET_REQUEST_MAX_BYTES: 369295616
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "false"
    networks:
      - local-net

  kafka3:
    image: confluentinc/cp-kafka
    container_name: kafka3
    hostname: kafka3
    depends_on:
      - zookeeper
    ports:
      - "9094:9094"
      - "19094:19094"
    environment:
      KAFKA_BROKER_ID: 3
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka3:9094,EXTERNAL://localhost:19094
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
      KAFKA_SOCKET_REQUEST_MAX_BYTES: 369295616
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "false"
    networks:
      - local-net

  nginx:
    image: nginx:stable-alpine3.17-slim
    container_name: nginx
    hostname: nginx
    ports:
      - "8080:8080"
    environment:
      NGINX_HOST: api.mywallet.eventhorizon.com.br
      NGINX_PORT: 80
    volumes:
      - ./volumes/nginx/templates:/etc/nginx/templates
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf
    networks:
      - local-net

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    hostname: kafka-ui
    depends_on:
      - kafka1
      - kafka2
      - kafka3
    ports:
      - "9091:8080"
    environment:
      SPRING_CONFIG_ADDITIONAL-LOCATION: /config.yaml
    volumes:
      - ./docker/kafka-ui/config.yaml:/config.yaml
    networks:
      - local-net

  kafka-exporter:
    image: danielqsj/kafka-exporter
    depends_on:
      - kafka1
      - kafka2
      - kafka3
    command: [ "--kafka.server=kafka1:9092", "--kafka.server=kafka1:9093", "--kafka.server=kafka1:9094" ]
    ports:
      - "9308:9308"
    networks:
      - local-net

  prometheus:
    image: prom/prometheus
    depends_on:
      - kafka-exporter
    ports:
      - "9090:9090"
    volumes:
      - "./docker/prometheus/prometheus.yaml:/etc/prometheus/prometheus.yml"
    networks:
      - local-net

  grafana:
    image: grafana/grafana
    ports:
      - "3000:3000"
    networks:
      - local-net

networks:
  local-net:
    driver: bridge
